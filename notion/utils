import streamlit as st
import time



def add_sidebar(st):
    """Adds the sidebar to the streamlit app."""
    with st.sidebar:

        btn_new_chat = st.button("\\+ New thread")
        if btn_new_chat:
            response = create_new_thread(force_refresh=True)


        st.markdown("# Hi, I am Nygel üëã   :blue[[BETA]]")

        st.markdown(
            """
            I am an AI-powered Support Agent. 
            
            I've been trained on MadKudu's Notion workspace. More specifically I've read all of the support runbooks.
            
            I can give you step by step instructions on how to solve a problem. I can also answer general questions about MadKudu.
            
            Just ask me anything!
        """)

        st.divider()

        st.markdown("""What makes me special?""")    

        with st.expander('1Ô∏è‚É£ I was trained on Support Runbooks.'):
            st.markdown("""I have read hundreds of pages in [Notion](https://www.notion.so/madkudu/Support-runbooks-d2a894351f944fc5b4abb9f29f30b4a4)
                        ... yeah we have a few...
        """, unsafe_allow_html=True)

        st.divider()

        st.markdown("Made with ‚ù§Ô∏è by the people at [MadKudu](https://madkudu.com)")


        with st.expander('Source'):
            source = """
            [Github Repo](https://github.com/francisbrero/notion_QA)
            """
            st.markdown(source, unsafe_allow_html=True)

        disclaimer = '<p style="font-size: 10px;">This LLM can make mistakes. Consider checking important information.</p>'
        st.markdown(disclaimer, unsafe_allow_html=True)


FIRST_MESSAGE = """What is your support question?

For example:
- Why doesn't a lead/account have a score?
- This record keeps changing score, why?
- Why is the predictions page empty for my model?
"""

def refresh_chat_widget():
    rewriting_the_chat_current_role = 'user'
    current_chat_message = ''
    
    if 'messages' not in st.session_state:
        st.session_state["messages"] = [{"role": "assistant", "content": FIRST_MESSAGE}]  
    
    for msg in st.session_state.messages:
        if rewriting_the_chat_current_role != msg["role"]:
            current_chat_message = st.chat_message(msg["role"])
        rewriting_the_chat_current_role = msg["role"]
        if msg.get("action") == "expander":
            with current_chat_message.expander(msg["title"]):
                if "source_url" in msg:
                    source_url = msg["source_url"]
                    st.write(f'source: <a href="{source_url}">{source_url}</a>', unsafe_allow_html=True)
                st.markdown(msg["content"])            
        else:
            current_chat_message.write(msg["content"])